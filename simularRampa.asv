function simulacao = simularRampa(xr, requisitos, plotarGraficos)

planta = obterPlanta();
saturacoes = obterValoresSaturacao();
[~,controlador.theta] = obterMalhaAngular(requisitos);
[~,controlador.x] = obterMalhaTangencial(requisitos);
tf = 10;

controlador.g = planta.g;


% Transformar xr em um vetor constante
xr = [0, xr; tf, xr];

% Configurando as variaveis usadas no Simulink
assignin('base', 'xr', xr);
assignin('base', 'x0', 0);
assignin('base', 'theta0', 0);
assignin('base', 'controlador', controlador);
assignin('base', 'planta', planta);
assignin('base', 'saturacoes', saturacoes);

% Carregando o Simulink
load_system('controladorRampa');

% Configurando o tempo final de simulacao
set_param('controladorRampa', 'StopTime', sprintf('%g', tf));

% Rodando a simulacao
simulacao = sim('controladorRampa');

% Plotar gráficos t por x e t por theta
t = simulacao.tout;
x = simulacao.x.signals.values;
theta = simulacao.theta.signals.values;

if(plotarGraficos)
%figure;

subplot(2,1,1);
plot(t, x, 'LineWidth', 1.5);
grid on;
xlabel('Tempo (s)');
ylabel('Posição x (m)');
title('Resposta da posição x(t)');

subplot(2,1,2);
plot(t, theta, 'LineWidth', 1.5);
grid on;
xlabel('Tempo (s)');
ylabel('\theta (rad)');
title('Resposta do ângulo \theta(t)');

end
